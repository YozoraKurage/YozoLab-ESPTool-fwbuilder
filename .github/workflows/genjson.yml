name: Generate Config JSON

on:
  push:
    paths:
      - 'firmware/**'
  workflow_dispatch:

jobs:
  generate-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          
      - name: Generate config.json
        run: |
          python3 - << EOF
          import os
          import json
          import glob
          
          base_url = "https://github.com/${{ github.repository }}/blob/main"
          config = {}
          
          # firmwareフォルダ以下のフォルダを検索
          for folder in glob.glob('firmware/**/'):
              if folder == 'firmware/':
                  continue
                  
              folder_name = os.path.basename(os.path.dirname(folder))
              bin_files = []
              
              # 固定オフセット定義
              offset_map = {
                  'bootloader.bin': '0x0000',
                  'partitions.bin': '0x8000',
                  'boot_app0.bin': '0xe000',
                  'firmware.bin': '0x10000'
              }
              
              # binファイルを検索
              for bin_file in glob.glob(f'{folder}*.bin'):
                  file_name = os.path.basename(bin_file)
                  bin_files.append({
                      'name': file_name,
                      'offset': offset_map.get(file_name, '0x10000'),
                      'path': f'{base_url}/{folder_name}/{file_name}'
                  })
              
              if bin_files:
                  config[folder_name] = {'files': bin_files}
          
          # config.jsonを生成
          with open('config.json', 'w') as f:
              json.dump(config, f, indent=2)
          EOF
          
      - name: Commit config.json
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add config.json
          git commit -m "Update config.json" || exit 0
          git push
